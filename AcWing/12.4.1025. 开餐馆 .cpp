//12.4.1025. 开餐馆 

信息学院的同学小明毕业之后打算创业开餐馆.现在共有 n个地点可供选择。
小明打算从中选择合适的位置开设一些餐馆。
这n个地点排列在同一条直线上。
我们用一个整数序列 m1,m2,…,mn来表示他们的相对位置。
由于地段关系,开餐馆的利润会有所不同。我们用pi表示在 mi处开餐馆的利润。
为了避免自己的餐馆的内部竞争,餐馆之间的距离必须大于k。
请你帮助小明选择一个总利润最大的方案。

输入格式
输入第一行是整数 T，表明有 T组测试数据。紧接着有T组连续的测试。每组测试数据有 3 行。
第1行:地点总数 n, 距离限制k；
第2行: n个整数，表示n个地点的位置m1,m2,…,mn(按升序排列)；
第3行: n个整数，表示n个地点的餐馆利润p1,p2,…,pn。

输出格式
输出共 T行，每行输出一组测试数据可能的最大利润。
数据范围
1≤T≤1000
n<100
0<k<1000
0<mi<106
0<pi<1000

输入样例：
2
3 11
1 2 15
10 2 30
3 16
1 2 15
10 2 30
输出样例：
40
30


#include<iostream>

using namespace std;

const int N=110;

int n,t,m;
int a[N],p[N];
int f[N];

int main(){
    cin>>t;
    while(t--){
        cin>>n>>m;
        for(int i=1;i<=n;i++)cin>>a[i];
        for(int i=1;i<=n;i++)cin>>p[i];
        int res=0;
        for(int i=1,j=1;i<=n;i++){
            while(j<=n&&a[i]-a[j]>m){
                res=max(res,f[j]);//递推公式是f[i]=max(f[1],f[2]...f[j])+p[i];(a[i]-a[j]>m):f[i]在第i个位置开餐馆的最大收益，m:最小间隔
                j++;
            }
            f[i]=res+p[i];
        }
        res=0;
        for(int i=1;i<=n;i++){
            res=max(res,f[i]);    
        }
        cout<<res<<endl;
    }
    return 0;
}