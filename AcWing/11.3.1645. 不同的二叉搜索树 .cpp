

//11.3.1645. 不同的二叉搜索树 
给定一个整数 n，求以 1…n为节点组成的二叉搜索树有多少种？
结果对 10^9+7取模后输出。

输入格式
共一行，包含一个整数 n。
输出格式
输出一个整数，表示对 10^9+7取模后的结果。
数据范围
1≤n≤1000
输入样例：
3
输出样例：
5
样例解释
当 n=3时, 一共有 5种不同结构的二叉搜索树:
   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

//卡特兰数列：1 1 2 5 14 ...

#include<iostream>
using namespace std;

const int N=1010,M=1e9+7;

int n;
long long dp[N];

int main(){
    cin>>n;
    dp[0]=dp[1]=1;
    for(int i=2;i<=n;i++){
        for(int j=0;j<i;j++){
            dp[i]=(dp[i]+dp[j]*dp[i-j-1])%M;  
			//以3为例，分别以1 2 3作为头结点的时候的数量，
			//1的时候，右边2个数，左边1个数，就有2种情况，2的时候，左右边1种情况，就一种情况，3的时候，左边两个数，右边一个数，2种情况，加起来5种情况
        }
    }
    cout<<dp[n]<<endl;
    return 0;
}