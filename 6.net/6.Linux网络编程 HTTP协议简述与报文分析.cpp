


//Linux网络编程 HTTP协议简述与报文分析

http是应用层协议
HTTP协议本质上是一种通信协议。是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）的应用层协议。
HTTP是基于客户端/服务端（C/S）的架构模型，通过一个可靠的链接来交换信息，是一个无状态的请求/响应协议。

一个HTTP"客户端"是一个应用程序（Web浏览器或其他任何客户端），通过连接到服务器达到向服务器发送一个或多个HTTP的请求的目的。
一个HTTP"服务器"同样也是一个应用程序（通常是一个Web服务，如Apache Web服务器或IIS服务器等），通过接收客户端的请求并向客户端发送HTTP响应数据。

HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。
特点：	简单快速
		无连接 限制每次连接只处理一个请求，在http11中取消这一项，一个连接可以处理多个请求
		无状态：HTTP协议是无状态协议。无状态是指HTTP协议对于事务处理没有记忆能力。
				HTTP缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。
				另一方面，在服务器不需要先前信息时它的应答就较快。

//URL和URI的区别
URI：统一资源标志符（Uniform Resource Identifier）
URL：统一资源定位符（uniform resource location）

URL是一种具体的URI，它是URI的一个子集，它不仅唯一标识资源，而且还提供了定位该资源的信息。
URI 是一种语义上的抽象概念，可以是绝对的，也可以是相对的，而URL则必须提供足够的信息来定位，是绝对的。

//HTTP报文结构概述
HTTP有两类报文：

请求报文：从客户端向服务器发送的请求报文。
应答报文：从服务器到客户的回答。

因为HTTP协议是面向文本的，因此在报文中的每一个字段都是一些ASCII码串，因而各个字段的长度都是不确定的。//下一章有例题


//HTTP请求报文
请求报文的第一行"请求行"只有三个内容：方法、请求资源的URL以及HTTP协议的版本。 //URL可以理解成某个资源在服务器的位置+该资源名字

请求报文中的常用方法
根据HTTP标准，HTTP请求可以使用多种请求方法。

HTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。

HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。

HTTP1.0主要是get和post：
	GET方法和POST方法的区别：
		1,GET重点在从服务器上获取资源，POST重点在向服务器发送数据。//其实下载和上传的区别
		2,GET传输的数据量小，因为受URL长度限制，但效率较高。POST可以传输大量数据，所以上传文件时只能用POST方式。
		3,GET是不安全的，因为URL是可见的，可能会泄露私密信息，如密码等。POST较GET安全性较高。
		4,GET方式只能支持ASCII字符，不支持中文。POST支持标准字符集，可以正确传递中文字符。
		5,GET传输数据是通过URL请求,POST传输数据将字段与对应值封存在请求实体中发送给服务器。
		
//HTTP响应报文
当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求。//下一章有例题

HTTP状态码的英文为HTTP Status Code。

下面是常见的HTTP状态码：
															1**:信息，服务器收到请求，需要请求者做下一步操作
	200 - 请求成功											2**：成功
	301 - 资源（网页等）被永久转移到其它URL					3**:重定向
	404 - 请求的资源（网页等）不存在						4**：客户端错误
	500 - 内部服务器错误									5**：服务器错误


//常见面试问题
1,什么是HTTP协议？(前面已介绍)

2,什么是HTTP协议无状态协议？怎么解决HTTP协议无状态协议？

无状态协议对于事务处理没有记忆能力，缺少状态意味着如果后续处理需要前面的信息。

无状态协议解决办法： 通过Cookie、通过Session会话保存。

3,讲一下HTTP协议中的302状态

HTTP协议中，返回状态码302表示临时重定向。这种情况下，服务器返回的头部信息中会包含一个 Location 字段。302表示旧地址的资源还在（仍然可以访问），这个重定向只是临时地从旧地址跳转到新地址，搜索引擎会抓取新的内容而保存旧的网址。

4,HTTP协议的组成(前面已介绍)

5,HTTP协议中有哪些请求方式?(前面已介绍)

6,HTTP协议中HTTP 1.0和1.1区别
	在HTTP 1.0 中，当建立连接后，客户端发送一个请求，服务器端返回一个信息后就关闭连接，当浏览器下次请求的时候又要建立连接，显然这种不断建立连接的方式，会造成很多问题。
	在HTTP 1.1 中，引入了持续连接的概念，通过这种连接，浏览器可以建立一个连接之后，发送请求并得到返回信息，然后继续发送请求再次等到返回信息，也就是说客户端可以连续发送多个请求，而不用等待每一个响应的到来。

7,GET与POST请求的区别？(前面已介绍)

8,HTTP与HTTPS优缺点？ //简单点就是https是安全版本的http
	通信使用明文不加密，内容可能被窃听，也就是被抓包分析。
	不验证通信方身份，可能遭到伪装。
	无法验证报文完整性，可能被篡改。
	HTTPS就是HTTP加上加密处理（一般是SSL安全通信线路）+ 认证 + 完整性保护。
