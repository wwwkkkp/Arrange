
//66. 加一
给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。

最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。

你可以假设除了整数 0 之外，这个整数不会以零开头。

示例 1:

输入: [1,2,3]
输出: [1,2,4]
解释: 输入数组表示数字 123。
示例 2:

输入: [4,3,2,1]
输出: [4,3,2,2]
解释: 输入数组表示数字 4321。


//数组
class Solution {
public:
    vector<int> plusOne(vector<int>& d) {
        int n=d.size();
        int f=1;  //f判断当前位是否需要加1
        for(int i=n-1;i>=0;i--){
            if(f){
                d[i]=(d[i]+1)%10;
                if(d[i]==0)f=1;  //如果+1后，当前位等于0，那说明要进位，依然把f置为1，
                else f=0;    //否则就不需要进位，后面的位就不需要+1了
            }
        }
        if(f)d.insert(d.begin(),1);  //到最后标志位还是1，那说明要进位，在开头添加一个1，
        return d;
    }
};

