

//89. 格雷编码
格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。

给定一个代表编码总位数的非负整数 n，打印其格雷编码序列。即使有多个不同答案，你也只需要返回其中一种。

格雷编码序列必须以 0 开头。

 

示例 1:

输入: 2
输出: [0,1,3,2]
解释:
00 - 0
01 - 1
11 - 3
10 - 2

对于给定的 n，其格雷编码序列并不唯一。
例如，[0,2,3,1] 也是一个有效的格雷编码序列。

00 - 0
10 - 2
11 - 3
01 - 1
示例 2:

输入: 0
输出: [0]
解释: 我们定义格雷编码序列必须以 0 开头。
     给定编码总位数为 n 的格雷编码序列，其长度为 2n。当 n = 0 时，长度为 20 = 1。
     因此，当 n = 0 时，其格雷编码序列为 [0]。



class Solution {
public:
    vector<int>v={0};
    vector<int> grayCode(int n) {
        if(!n)return v;
        dfs(0,n);
        return v;
    }
    void dfs(int a,int n){ //一共是n位，现在令第a位等于1，然后把a-1位的集合倒着加上2^a，就相当于变量一位了，
        if(a==n)return;
        int k=pow(2,a);  

        int m=v.size();
        for(int i=m-1;i>=0;i--){
            v.push_back(v[i]+k);
        }

        dfs(a+1,n);
    }
};

举例：n=2:00 01 11 10,当n=3的时候,相当于是第三位置1，然后将2^3依次倒着加一遍n=2的情况,
	  n=3:00 01 11 10,100+10,100+11,100+01,100+00,依次类推，就相当于每次只改变了1位。