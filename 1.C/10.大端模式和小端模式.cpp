//大端模式和小端模式

大端模式：是指数据的低字节保存在内存的高地址中，这和我们的阅读习惯一致。
小端模式，是指数据的低字节保存在内存的低地址中，

例如：
对于0x12345678的保存;因为数字是保存在栈中，所以首先是从高地址开始存储
				低地址		高地址
大端模式		  12  34  56  78

小端模式		  78  56  34  12

大小端模式判断：

#include<stdio.h>
bool IsBig()    // 判断是否为大端模式
{
	int a = 0x12345678;
	char *p = (char *)&a;
	if(*p == 0x78)     //第一个字节是否为78，若为78则为小端模式，否则，为大端模式
	{
		printf("第一个字节:%x\n",*p);
        return false;   //小端
	}
	else
	{
        printf("第一个字节:%x",*p);
		return true;    //大端
	}
 
}

大小端模式切换：

#include<stdio.h>
int swap(int n)
{
  
	n = (((n&0xff000000) >>24) | ((n&0x00ff0000) >>8) | ((n&0x0000ff00) <<8) | ((n&0x000000ff) <<24) );  //注意这里移动的位数，16进制中，1个数4位，2个数一个字节，所以是两个数一起存储，所以这里一个零代表4位，
	return n;
}

