
//数组指针与指针数组

//数组指针（也称行指针）
数组指针：数组指针可以说成是”数组的指针”，首先这个变量是一个指针，其次，”数组”修饰这个指针，意思是说这个指针存放着一个数组的首地址，或者说这个指针指向一个数组的首地址。

如要将二维数组赋给一指针，应这样赋值：
int a[3][4]; 
int (*p)[4];     //该语句是定义一个数组指针，指向含4个元素的一维数组。
p=a;            //将该二维数组的首地址赋给p，也就是a[0]或&a[0][0] 
p++;            //该语句执行过后，也就是p=p+1；p跨过行a[0][]指向了行a[1][]
注意p+1是换行，*p[0]+1是换列
所以数组指针也称指向一维数组的指针，亦称行指针。

//指针数组

指针数组：指针数组可以说成是”指针的数组”，首先这个变量是一个数组，其次，”指针”修饰这个数组，意思是说这个数组的所有元素都是指针类型，在32位系统中，指针占四个字节。
定义：int *p[n];
[]优先级高，先与p结合成为一个数组，再由 int * 说明这是一个整型指针数组，它有n个指针类型的数组元素。这里执行p+1时，则p指向下一个数组元素(后面会详细讲)，这样赋值是错误的：int a,p=a；因为p是个不可知的表示，只存在p[0]、p[1]、p[2]...p[n-1]，而且它们分别是指针变量可以用来存放变量地址。但可以这样 *p=a; 这里*p表示指针数组第一个元素的值，a的首地址的值。

首先先定义一个指针数组，既然是数组，名字就叫arr:

char *arr[4] = {"hello", "world", "shannxi", "xian"};
				/*arr就是定义的一个指针数组，它有四个元素，
				每个元素是一个char *类型的指针，这些指针存放着其对应字符串的首地址。
				这个指针数组有多大呢？答案是16个字节，因为它是一个指针数组。  */

内存映像图：
					内容               权限
栈区          函数中的普通变量  		wr
堆区            动态申请的内存 			wr
静态变量区    static修饰的变量			wr
数据区		 用于初始化变量的常量		r
代码区		   	   代码指令				r

一般情况下，从栈区到代码区，是从高地址到低地址。栈向下增长，堆向上增长。普通变量 高地址先存低地址后存
对于arr中的四个数，是被分配在只读的数据区，arr的4个指针分别指向4个字符串首地址

要表示数组中 i 行 j 列一个元素：*(p[i]+j)、*(*(p+i)+j)、p[i][j]、(*(p+i))[j]。优先级：() > [] > *


//二维数组


int brr[2][3] = {1,2,3,4,5,6};  //注意：因为brr是二维数组，所以*brr也是地址，**brr才等于1，

printf("%d <== brr\n",brr);   //数组首元素的首地址
printf("%d <== brr+1\n",brr+1); // 下一行首元素的首地址，即数组元素 4 的首地址
printf("%d <== *brr+1\n",*brr+1); // 数组首元素的下一个元素，即数组元素 2 的首地址
printf("%d <== *(brr+1)\n",*(brr+1)); // *(brr+1)相当于brr[1],即下一行首元素的首地址  
printf("%d <== *(brr+1)+2 \n",*(brr+1)+2); //*(brr+1)+2相当于brr[1]+2,即数组元素 6 的首地址
printf("%d <== &brr[1][2]\n",&brr[1][2]); // 数组元素 6 的地址
printf("%d <== *(*(brr+1)+2)\n",*(*(brr+1)+2)); // 数组元素 6
printf("%d <== *(brr[1]+2)\n\n",*(brr[1]+2));  // 数组元素 6

printf("%d <== brr[1][0]\n",brr[1][0]); // 数组元素 4
printf("%d <== brr[0][3]\n",brr[0][3]);	// 数组元素 4
printf("%d <== &brr[1][0]\n",&brr[1][0]); // 数组元素 4 的首地址
printf("%d <== &brr[0][3]\n",&brr[0][3]);  // 数组元素 4 的首地址

brr[1][0]与brr[0][3]的地址相同，说明二维数组在内存中是连续的、线性存储的。

一维数组的类型为int * 型，而 二维数组的类型为 int(*)[ ] 类型
例如：brr[2][3]的类型为 int (*brr)[3] ，即 brr 为指向数组的指针，该数组含有3个int型数据的一维数组，3  相当于列数。

int *brr[3]是一维数组，int (*brr)[3]二维数组
